#include "cmaxtesting.h"
#include "flowproblem.h"

#include <iostream>
#include <algorithm>

void mojPrzykladTest() {
    FlowProblem flowProblem(4, 2, 2);
    flowProblem.printPreviousTasks();

    // Stworzenie wektora permutacji i czasów do testów
    unsigned int permutationArray[] = {0, 1, 5, 0, 3, 7, 0, 2, 6, 0, 4, 8, 0};
    double timesArray[] = {0,4,3,2,4,3,5,6,3};

    std::vector<unsigned int> permutation(permutationArray,
                                          permutationArray + sizeof(permutationArray) / sizeof(unsigned int));
    std::vector<double> times(timesArray,
                              timesArray + sizeof(timesArray) / sizeof(double));

    flowProblem.setData(times, permutation);

    std::vector<double> totalTimes = flowProblem.getTotalTimes();
    int i = 0;
    std::cout << "Calkowite czasy dzialania: " << std::endl;
    // TODO: Zobaczyć, jak działa std::for_each
    for (std::vector<double>::iterator it = totalTimes.begin();
         it != totalTimes.end(); it++, i++) {
        std::cout << i <<": " << *it << "   ";
    }
    std::cout << std::endl;

    flowProblem.printLongerPredecessors();

    std::cout << "Cmax: " << flowProblem.getBestCMax() << std::endl;
    std::cout << "Cmax index: " << flowProblem.getBestCMaxPosition() << std::endl;

    flowProblem.printCriticalPath();
    flowProblem.printBlockSplit();
}

void criticalPathTest() {
    FlowProblem flowProblem;

    unsigned int critPathArray[] = {1,4,7,8,11,14,17,18,21,24};
    std::vector<unsigned int> critPath(critPathArray, critPathArray + sizeof(critPathArray) / sizeof(unsigned int));

    flowProblem.setCriticalPath(critPath);
    flowProblem.printCriticalPath();
    flowProblem.printBlockSplit();
}

bool cMaxTest(unsigned int n, unsigned int s, unsigned int ms,
              double times[], unsigned int permutation[],
              double expectedCMax, double expectedTimes[]) {
    FlowProblem flowProblem(n, s, ms);

    std::vector<unsigned int> testPermutation(permutation, permutation + (n*s + ms*s) );
    std::vector<double> testTimes(times, times + (n*s+1) );

    flowProblem.setData(testTimes, testPermutation);

    std::vector<double> totalTimes = flowProblem.getTotalTimes();
    double cMax = *(std::max_element(totalTimes.begin(), totalTimes.end()));

    int i = 0;
    for (const auto &time : totalTimes) {
        if (time != expectedTimes[i]) {
            return false;
        }
        i++;
    }

    return (cMax == expectedCMax);
}

bool test20_5() {
    unsigned int n = 20;
    unsigned int s = 5;
    unsigned int ms = 2;

    double times[] = {0, 37, 59, 65, 70, 94, 36, 16, 94, 3, 98, 1, 90, 96, 43, 63, 4, 3, 47, 14, 83, 64, 76, 35, 26, 19, 74, 74, 34, 83, 79, 32, 22, 84, 26, 54, 67, 30, 3, 65, 78, 73, 89, 60, 47, 29, 7, 61, 34, 94, 8, 78, 39, 70, 75, 38, 64, 15, 57, 30, 97, 98, 69, 8, 1, 61, 60, 57, 74, 71, 10, 89, 9, 13, 46, 37, 49, 13, 37, 87, 16, 2, 71, 87, 78, 78, 79, 2, 71, 76, 96, 79, 34, 89, 75, 9, 53, 49, 57, 55, 91};
    unsigned int permutation[] = {0, 16, 96, 1, 66, 31, 81, 26, 11, 41, 91, 21, 46, 0, 6, 86, 76, 36, 51, 56, 61, 71, 0, 17, 97, 2, 77, 32, 37, 27, 12, 57, 62, 72, 0, 7, 87, 67, 82, 52, 42, 92, 22, 47, 0, 18, 98, 3, 78, 33, 28, 13, 93, 73, 0, 8, 88, 68, 38, 83, 53, 43, 58, 63, 23, 48, 0, 19, 99, 4, 79, 39, 29, 14, 59, 64, 24, 74, 49, 0, 9, 89, 69, 34, 84, 54, 44, 94, 0, 20, 100, 5, 35, 85, 55, 15, 95, 65, 75, 0, 10, 90, 70, 80, 40, 30, 45, 60, 25, 50, 0};

    double expectedCMax = 793;
    double expectedTimes[] = {0, 94, 165, 230, 300, 403, 36, 52, 146, 149, 247, 263, 426, 522, 578, 647, 4, 7, 54, 68, 151, 479, 555, 611, 637, 759, 262, 336, 385, 535, 614, 186, 208, 351, 390, 457, 231, 261, 294, 452, 530, 336, 437, 511, 590, 643, 486, 616, 650, 777, 785, 309, 348, 451, 543, 584, 373, 441, 568, 608, 740, 471, 540, 576, 609, 756, 154, 211, 291, 364, 399, 560, 569, 624, 683, 793, 164, 178, 267, 387, 415, 188, 282, 381, 468, 546, 115, 117, 217, 293, 389, 415, 471, 611, 686, 695, 57, 106, 163, 218, 309};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test20_10() {
    unsigned int n = 20;
    unsigned int s = 10;
    unsigned int ms = 2;

    double times[] = {0,39, 9, 72, 93, 8, 75, 16, 98, 65, 21, 16, 19, 13, 77, 83, 70, 98, 49, 93, 98, 84, 71, 49, 20, 29, 16, 85, 46, 14, 61, 51, 7, 37, 1, 87, 72, 63, 66, 73, 78, 19, 23, 89, 60, 77, 85, 10, 63, 97, 6, 57, 7, 37, 36, 15, 94, 14, 88, 17, 34, 33, 65, 58, 85, 26, 49, 82, 41, 91, 53, 1, 56, 4, 18, 97, 40, 39, 13, 71, 63, 23, 37, 13, 97, 44, 64, 23, 43, 59, 3, 39, 87, 48, 24, 85, 98, 29, 54, 45, 50, 27, 43, 4, 60, 22, 46, 30, 69, 45, 29, 37, 4, 43, 28, 17, 18, 99, 97, 21, 29, 37, 92, 18, 94, 47, 47, 34, 10, 98, 20, 1, 75, 9, 34, 30, 2, 16, 51, 64, 68, 82, 86, 81, 61, 10, 77, 34, 95, 50, 84, 24, 26, 66, 10, 84, 74, 28, 51, 74, 29, 28, 17, 82, 4, 13, 77, 69, 92, 77, 75, 98, 7, 21, 83, 26, 32, 85, 71, 32, 85, 74, 80, 60, 91, 16, 65, 50, 98, 70, 98, 36, 24, 26, 38, 48, 91, 58, 33, 95, 68};
    unsigned int permutation[] = {0, 71, 31, 121, 141, 61, 171, 91, 41, 51, 0, 161, 131, 11, 101, 181, 111, 151, 191, 1, 21, 81, 0, 72, 132, 182, 112, 62, 152, 2, 22, 52, 82, 0, 162, 32, 12, 102, 122, 142, 172, 192, 92, 42, 0, 73, 33, 133, 123, 143, 153, 23, 93, 53, 83, 0, 163, 13, 103, 183, 113, 63, 173, 193, 3, 43, 0, 74, 34, 134, 104, 184, 114, 64, 194, 4, 54, 0, 164, 14, 124, 144, 154, 174, 24, 94, 44, 84, 0, 75, 135, 15, 185, 115, 65, 175, 5, 45, 0, 165, 35, 105, 125, 145, 155, 195, 25, 95, 55, 85, 0, 76, 36, 106, 126, 146, 156, 6, 96, 56, 0, 166, 136, 16, 186, 116, 66, 176, 196, 26, 46, 86, 0, 77, 37, 107, 127, 187, 117, 157, 177, 7, 27, 47, 87, 0, 167, 137, 17, 147, 67, 197, 97, 57, 0, 78, 38, 18, 148, 68, 158, 198, 8, 48, 88, 0, 168, 138, 108, 128, 188, 118, 178, 28, 98, 58, 0, 79, 39, 19, 189, 119, 159, 199, 29, 99, 59, 89, 0, 169, 139, 109, 129, 149, 69, 179, 9, 49, 0, 80, 40, 20, 150, 70, 200, 100, 60, 0, 170, 140, 110, 130, 190, 120, 160, 180, 10, 30, 50, 90, 0};

    double expectedCMax = 1095;
    double expectedTimes[] = {0,282, 330, 506, 621, 629, 704, 743, 880, 945, 966, 45, 78, 140, 217, 300, 370, 468, 517, 610, 708, 366, 437, 495, 559, 617, 704, 828, 874, 932, 1027, 52, 59, 98, 99, 231, 303, 366, 432, 505, 583, 360, 451, 595, 655, 732, 817, 838, 943, 1042, 1048, 417, 444, 580, 657, 717, 896, 910, 1016, 1033, 1070, 204, 295, 387, 490, 516, 565, 647, 698, 807, 860, 1, 57, 61, 79, 176, 216, 255, 268, 339, 402, 389, 481, 593, 752, 796, 881, 904, 986, 1092, 1095, 341, 428, 543, 583, 702, 802, 831, 928, 977, 1036, 72, 121, 144, 235, 257, 349, 396, 502, 568, 631, 183, 230, 329, 405, 422, 476, 607, 707, 728, 813, 89, 213, 231, 325, 372, 419, 453, 512, 666, 686, 29, 132, 141, 175, 206, 223, 306, 433, 523, 602, 171, 299, 380, 441, 451, 528, 562, 657, 716, 800, 207, 321, 446, 456, 540, 614, 642, 749, 823, 852, 28, 45, 127, 131, 144, 221, 290, 382, 459, 534, 302, 309, 408, 539, 565, 597, 727, 798, 839, 937, 146, 226, 286, 377, 393, 458, 508, 610, 680, 784, 243, 333, 434, 528, 588, 688, 746, 782, 918, 986};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test20_20() {
    unsigned int n = 20;
    unsigned int s = 20;
    unsigned int ms = 2;

    double times[] = {0,1, 6, 10, 28, 69, 95, 90, 87, 80, 60, 17, 13, 66, 79, 79, 6, 43, 3, 36, 67, 96, 36, 65, 13, 34, 75, 38, 32, 10, 70, 74, 98, 30, 12, 93, 73, 45, 69, 98, 96, 21, 74, 39, 74, 10, 24, 20, 8, 63, 38, 87, 79, 89, 96, 25, 64, 46, 38, 7, 70, 57, 53, 99, 18, 91, 3, 85, 17, 14, 94, 39, 20, 45, 78, 61, 30, 9, 61, 3, 89, 7, 25, 77, 71, 98, 83, 49, 54, 89, 94, 14, 57, 44, 29, 59, 30, 10, 8, 5, 5, 34, 68, 39, 11, 60, 67, 37, 43, 65, 30, 28, 68, 91, 28, 20, 99, 42, 54, 82, 45, 72, 37, 50, 17, 3, 88, 29, 3, 43, 50, 12, 17, 18, 14, 92, 61, 43, 90, 41, 38, 12, 42, 14, 27, 86, 75, 84, 65, 44, 17, 49, 27, 67, 52, 1, 26, 46, 3, 2, 79, 80, 68, 75, 89, 55, 28, 93, 33, 28, 43, 88, 25, 94, 27, 35, 38, 7, 5, 63, 73, 99, 74, 28, 14, 95, 65, 99, 36, 39, 28, 91, 36, 41, 51, 97, 46, 15, 25, 56, 99, 28, 93, 92, 13, 73, 54, 44, 70, 59, 33, 53, 67, 78, 46, 79, 76, 32, 31, 85, 33, 80, 39, 74, 40, 65, 65, 39, 18, 91, 48, 40, 73, 27, 98, 37, 65, 80, 38, 85, 1, 30, 75, 20, 97, 24, 34, 18, 19, 70, 48, 1, 34, 15, 97, 72, 51, 4, 36, 25, 84, 15, 54, 70, 70, 22, 17, 40, 76, 24, 81, 55, 47, 55, 38, 76, 39, 73, 35, 98, 79, 95, 10, 43, 96, 5, 51, 24, 7, 96, 50, 39, 65, 28, 78, 89, 23, 42, 52, 58, 44, 19, 60, 6, 13, 67, 98, 98, 34, 1, 86, 35, 79, 28, 89, 7, 71, 98, 13, 16, 39, 12, 15, 77, 66, 39, 94, 61, 66, 92, 23, 99, 31, 26, 67, 79, 63, 24, 78, 99, 16, 59, 75, 25, 77, 58, 22, 72, 72, 79, 95, 17, 54, 98, 91, 85, 94, 25, 31, 61, 50, 66, 71, 68, 2, 4, 57, 21, 16, 57, 3, 69, 56, 98, 51, 40, 62, 13, 8, 21, 39, 51, 22, 83, 41, 30, 37, 76, 95, 88, 80, 67, 33, 77, 62, 24, 87, 38, 62, 26, 55};
    unsigned int permutation[] = {0, 1, 201, 241, 261, 341, 121, 181, 61, 221, 0, 321, 141, 21, 41, 301, 161, 101, 281, 381, 81, 361, 0, 2, 202, 242, 342, 122, 162, 102, 222, 82, 0, 322, 142, 22, 262, 42, 302, 182, 282, 62, 382, 362, 0, 3, 203, 243, 343, 123, 183, 103, 63, 83, 0, 323, 143, 23, 263, 43, 303, 163, 283, 223, 383, 363, 0, 4, 204, 244, 344, 124, 304, 184, 104, 284, 224, 84, 0, 324, 144, 24, 264, 44, 164, 64, 384, 364, 0, 5, 205, 245, 345, 165, 105, 225, 85, 0, 325, 145, 25, 265, 45, 125, 305, 185, 285, 65, 385, 365, 0, 6, 206, 26, 346, 306, 186, 286, 386, 86, 0, 326, 146, 246, 266, 46, 126, 166, 106, 66, 226, 366, 0, 7, 207, 27, 267, 47, 127, 167, 107, 287, 67, 87, 0, 327, 147, 247, 347, 307, 187, 227, 387, 367, 0, 8, 208, 28, 248, 268, 48, 128, 308, 188, 228, 388, 0, 328, 148, 348, 168, 108, 288, 68, 88, 368, 0, 9, 209, 29, 249, 349, 309, 189, 69, 229, 89, 369, 0, 329, 149, 269, 49, 129, 169, 109, 289, 389, 0, 10, 210, 30, 270, 50, 130, 310, 110, 70, 230, 90, 0, 330, 150, 250, 350, 170, 190, 290, 390, 370, 0, 11, 211, 151, 251, 271, 51, 171, 111, 291, 391, 0, 331, 31, 351, 131, 311, 191, 71, 231, 91, 371, 0, 12, 212, 32, 52, 172, 192, 292, 392, 0, 332, 152, 252, 272, 352, 132, 312, 112, 72, 232, 92, 372, 0, 13, 213, 33, 353, 133, 313, 193, 113, 233, 93, 373, 0, 333, 153, 253, 273, 53, 173, 293, 73, 393, 0, 14, 214, 34, 274, 354, 134, 314, 114, 74, 394, 0, 334, 154, 254, 54, 174, 194, 294, 234, 94, 374, 0, 15, 215, 255, 355, 315, 175, 195, 75, 395, 375, 0, 335, 155, 35, 275, 55, 135, 115, 295, 235, 95, 0, 16, 216, 256, 356, 316, 196, 296, 76, 236, 96, 376, 0, 336, 156, 36, 276, 56, 136, 176, 116, 396, 0, 17, 217, 257, 277, 57, 137, 177, 197, 117, 397, 0, 337, 157, 37, 357, 317, 297, 77, 237, 97, 377, 0, 18, 218, 258, 278, 58, 138, 198, 298, 78, 398, 0, 338, 158, 38, 358, 318, 178, 118, 238, 98, 378, 0, 19, 219, 159, 39, 359, 319, 179, 119, 399, 99, 379, 0, 339, 259, 279, 59, 139, 199, 299, 79, 239, 0, 20, 220, 40, 360, 140, 200, 300, 240, 400, 100, 380, 0, 340, 160, 260, 280, 60, 320, 180, 120, 80, 0};

    double expectedCMax = 1783;
    double expectedTimes[] = {0,1, 7, 17, 45, 114, 209, 299, 386, 466, 526, 543, 556, 622, 701, 780, 786, 829, 832, 868, 935, 120, 156, 221, 234, 329, 429, 467, 500, 537, 630, 718, 816, 846, 858, 951, 1024, 1069, 1138, 1236, 1332, 141, 284, 330, 435, 445, 469, 527, 603, 682, 749, 853, 932, 1021, 1117, 1142, 1206, 1252, 1290, 1297, 1439, 361, 481, 584, 602, 706, 726, 869, 886, 900, 1009, 1050, 1087, 1191, 1285, 1369, 1415, 1465, 1569, 1586, 1744, 427, 509, 661, 732, 830, 913, 962, 1016, 1105, 1199, 1213, 1270, 1314, 1400, 1467, 1510, 1570, 1606, 1669, 1744, 274, 445, 485, 496, 656, 723, 760, 803, 868, 915, 969, 1067, 1179, 1207, 1254, 1432, 1474, 1528, 1610, 1655, 205, 309, 359, 425, 448, 557, 586, 606, 725, 799, 835, 894, 993, 1080, 1234, 1295, 1338, 1428, 1469, 1507, 24, 69, 118, 197, 295, 378, 462, 527, 571, 588, 662, 702, 769, 821, 848, 936, 982, 1015, 1109, 1206, 240, 377, 452, 541, 596, 624, 717, 750, 778, 849, 941, 966, 1115, 1144, 1211, 1333, 1345, 1432, 1506, 1579, 304, 418, 446, 460, 610, 678, 810, 846, 885, 913, 1011, 1047, 1088, 1195, 1308, 1362, 1377, 1453, 1525, 1624, 29, 122, 214, 227, 300, 354, 398, 468, 527, 560, 613, 680, 758, 804, 883, 959, 991, 1022, 1107, 1140, 441, 484, 569, 632, 721, 791, 849, 867, 991, 1057, 1097, 1170, 1206, 1371, 1408, 1480, 1560, 1598, 1683, 1684, 59, 197, 234, 331, 355, 412, 480, 519, 607, 655, 663, 736, 784, 918, 990, 1041, 1045, 1081, 1136, 1290, 74, 210, 291, 361, 383, 429, 507, 595, 619, 711, 766, 813, 868, 906, 1027, 1066, 1139, 1174, 1272, 1369, 369, 428, 495, 592, 615, 729, 784, 810, 964, 1014, 1053, 1118, 1146, 1273, 1362, 1385, 1456, 1508, 1583, 1668, 160, 344, 350, 438, 515, 613, 711, 745, 746, 885, 920, 999, 1027, 1169, 1176, 1316, 1414, 1427, 1443, 1482, 12, 27, 104, 170, 209, 303, 364, 430, 522, 545, 644, 675, 701, 768, 847, 910, 934, 1012, 1111, 1127, 133, 272, 297, 408, 466, 488, 560, 632, 711, 806, 823, 877, 975, 1066, 1151, 1245, 1270, 1301, 1362, 1412, 493, 574, 720, 722, 740, 848, 946, 1032, 1162, 1191, 1282, 1338, 1436, 1487, 1527, 1589, 1602, 1614, 1690, 1783, 420, 503, 652, 693, 736, 773, 925, 1020, 1108, 1188, 1255, 1288, 1365, 1427, 1451, 1538, 1576, 1638, 1664, 1739};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test50_5() {
    unsigned int n = 50;
    unsigned int s = 5;
    unsigned int ms = 2;

    double times[] = {0,34, 24, 20, 65, 47, 40, 85, 61, 39, 62, 22, 19, 69, 68, 11, 6, 94, 28, 40, 6, 50, 59, 69, 82, 21, 64, 65, 35, 31, 60, 48, 42, 17, 29, 82, 74, 8, 59, 17, 2, 67, 10, 16, 69, 31, 22, 15, 54, 44, 27, 26, 96, 6, 19, 81, 13, 63, 18, 29, 34, 24, 30, 2, 60, 7, 54, 20, 4, 27, 6, 22, 31, 80, 93, 53, 9, 94, 45, 35, 19, 28, 35, 2, 17, 28, 48, 84, 18, 1, 63, 83, 83, 83, 99, 29, 85, 53, 21, 96, 34, 79, 57, 41, 1, 96, 78, 25, 51, 62, 39, 40, 71, 85, 84, 19, 15, 22, 56, 42, 45, 95, 31, 88, 60, 64, 75, 35, 40, 42, 72, 73, 40, 20, 66, 26, 41, 76, 16, 1, 59, 52, 14, 22, 1, 51, 71, 48, 98, 31, 74, 84, 42, 56, 41, 3, 73, 11, 69, 62, 11, 25, 92, 90, 83, 96, 41, 68, 9, 74, 50, 74, 55, 81, 38, 23, 15, 88, 65, 56, 43, 58, 52, 38, 57, 36, 55, 36, 75, 54, 52, 47, 62, 60, 45, 9, 12, 42, 81, 39, 44, 36, 51, 59, 85, 32, 48, 68, 94, 40, 2, 96, 10, 3, 21, 78, 47, 38, 19, 84, 83, 64, 29, 15, 17, 69, 5, 56, 29, 24, 47, 24, 23, 94, 65, 17, 78, 71, 48, 98, 35, 59, 45, 39, 90, 45, 4, 98, 3, 46, 30};
    unsigned int permutation[] = {0, 116, 71, 46, 86, 231, 236, 6, 101, 91, 96, 11, 126, 111, 151, 106, 181, 196, 211, 221, 1, 141, 81, 36, 0, 56, 216, 241, 161, 121, 21, 31, 146, 51, 186, 166, 136, 156, 176, 26, 201, 171, 191, 76, 131, 246, 41, 206, 226, 16, 61, 66, 0, 117, 217, 47, 242, 232, 162, 122, 22, 32, 92, 97, 187, 12, 127, 157, 112, 177, 107, 172, 192, 212, 132, 222, 247, 142, 17, 67, 37, 0, 57, 72, 87, 237, 7, 102, 147, 52, 167, 137, 152, 27, 202, 182, 197, 77, 42, 2, 207, 227, 62, 82, 0, 118, 218, 48, 88, 233, 238, 123, 103, 33, 93, 53, 98, 168, 13, 138, 113, 178, 203, 183, 193, 213, 78, 248, 208, 63, 83, 68, 0, 58, 73, 243, 163, 8, 23, 148, 188, 128, 158, 153, 28, 108, 173, 198, 133, 223, 43, 3, 143, 228, 18, 38, 0, 119, 74, 234, 239, 9, 24, 149, 54, 99, 14, 139, 159, 154, 179, 204, 184, 214, 79, 224, 249, 4, 144, 229, 19, 84, 69, 0, 59, 219, 49, 89, 244, 164, 124, 104, 34, 94, 189, 169, 129, 114, 29, 109, 174, 194, 199, 134, 44, 209, 64, 39, 0, 120, 75, 245, 165, 10, 35, 95, 55, 190, 15, 140, 160, 155, 180, 110, 175, 185, 215, 225, 5, 230, 70, 40, 0, 60, 220, 50, 90, 235, 240, 125, 25, 105, 150, 100, 170, 130, 115, 30, 205, 195, 200, 80, 135, 250, 45, 210, 145, 20, 65, 85, 0};

    double expectedCMax = 1418;
    double expectedTimes[] = {0,1059, 1097, 1156, 1297, 1344, 249, 365, 430, 505, 610, 518, 604, 712, 811, 865, 1092, 1260, 1288, 1362, 1382, 289, 369, 499, 587, 608, 723, 824, 872, 964, 1024, 337, 411, 497, 542, 692, 1213, 1288, 1347, 1400, 1414, 1033, 1073, 1136, 1283, 1314, 59, 113, 171, 251, 317, 434, 566, 586, 647, 802, 13, 76, 94, 123, 157, 1116, 1251, 1261, 1383, 1390, 1170, 1280, 1292, 1406, 1412, 37, 107, 187, 280, 333, 889, 1063, 1108, 1169, 1211, 1139, 1286, 1288, 1379, 1418, 107, 191, 209, 252, 380, 411, 494, 580, 679, 721, 496, 549, 607, 743, 812, 328, 422, 480, 513, 704, 795, 839, 923, 1026, 1065, 633, 726, 813, 933, 953, 15, 37, 93, 135, 180, 239, 310, 439, 512, 576, 593, 639, 712, 849, 934, 962, 1011, 1105, 1214, 1240, 571, 710, 728, 812, 924, 1111, 1166, 1188, 1298, 1376, 408, 470, 597, 628, 778, 717, 759, 837, 915, 938, 644, 655, 781, 874, 935, 144, 279, 369, 452, 548, 530, 634, 643, 807, 862, 833, 894, 1004, 1064, 1088, 659, 814, 879, 971, 1014, 853, 927, 976, 1113, 1149, 489, 585, 672, 733, 854, 880, 956, 1036, 1109, 1118, 865, 969, 1085, 1148, 1192, 759, 875, 938, 1056, 1088, 1081, 1165, 1259, 1323, 1325, 961, 971, 1039, 1134, 1227, 60, 98, 117, 207, 290, 1025, 1054, 1120, 1186, 1296, 1086, 1221, 1250, 1322, 1391, 131, 187, 303, 368, 397, 209, 280, 351, 466, 501, 119, 164, 226, 342, 387, 966, 1152, 1155, 1232, 1270};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test50_10() {
    unsigned int n = 50;
    unsigned int s = 10;
    unsigned int ms = 2;

    double times[] = {0,68, 69, 1, 19, 10, 76, 50, 39, 77, 30, 40, 96, 37, 65, 76, 40, 87, 11, 30, 71, 43, 54, 91, 35, 75, 96, 77, 96, 88, 57, 72, 37, 59, 89, 29, 54, 88, 74, 21, 83, 87, 35, 2, 41, 10, 91, 80, 22, 29, 34, 59, 19, 44, 15, 86, 90, 75, 22, 12, 31, 67, 10, 29, 99, 62, 41, 41, 50, 2, 11, 89, 88, 37, 19, 26, 72, 84, 6, 95, 50, 84, 61, 30, 74, 1, 37, 24, 95, 24, 22, 43, 95, 20, 63, 62, 38, 27, 83, 20, 7, 92, 18, 19, 92, 89, 64, 52, 70, 66, 82, 90, 49, 79, 29, 2, 98, 73, 1, 82, 34, 23, 69, 41, 47, 62, 36, 75, 8, 45, 5, 20, 86, 79, 80, 96, 20, 23, 94, 4, 62, 97, 28, 49, 7, 99, 3, 52, 65, 22, 3, 57, 6, 21, 43, 91, 41, 97, 70, 81, 68, 33, 40, 97, 89, 85, 93, 40, 61, 56, 35, 7, 88, 86, 9, 42, 44, 50, 80, 85, 79, 69, 94, 15, 99, 7, 3, 95, 82, 3, 10, 56, 78, 57, 38, 4, 19, 34, 23, 82, 60, 16, 43, 76, 76, 23, 66, 2, 51, 94, 67, 41, 31, 14, 52, 74, 55, 76, 92, 72, 10, 7, 54, 57, 48, 83, 66, 26, 25, 96, 87, 74, 80, 80, 55, 41, 68, 48, 23, 55, 25, 54, 11, 93, 17, 63, 1, 16, 40, 3, 24, 67, 27, 31, 63, 99, 5, 20, 69, 63, 4, 15, 3, 66, 92, 55, 59, 86, 42, 65, 36, 85, 32, 30, 77, 37, 64, 62, 13, 20, 44, 83, 2, 82, 31, 23, 1, 54, 17, 4, 22, 42, 49, 11, 44, 1, 5, 50, 27, 95, 8, 29, 27, 71, 76, 84, 11, 26, 74, 20, 49, 64, 81, 94, 18, 46, 46, 4, 7, 57, 97, 3, 18, 35, 7, 31, 10, 4, 25, 38, 8, 9, 83, 71, 40, 93, 56, 59, 73, 46, 9, 35, 84, 76, 47, 79, 25, 24, 81, 76, 18, 24, 49, 76, 73, 32, 95, 14, 84, 10, 34, 72, 64, 26, 41, 71, 12, 49, 40, 79, 54, 70, 20, 31, 70, 60, 48, 35, 28, 7, 42, 47, 52, 58, 86, 42, 11, 78, 86, 12, 70, 78, 42, 31, 8, 24, 45, 77, 17, 60, 59, 60, 51, 98, 63, 51, 25, 72, 66, 85, 8, 11, 66, 26, 77, 98, 62, 10, 33, 73, 29, 60, 95, 92, 91, 64, 12, 87, 20, 18, 6, 5, 18, 11, 24, 85, 67, 24, 84, 75, 42, 24, 37, 72, 19, 31, 17, 26, 23, 77, 33, 52, 70, 46, 63, 11, 59, 46, 73, 71, 67, 39, 22, 20, 72, 95, 30, 40, 25, 83, 7, 14, 87, 38, 17, 58, 73, 86, 87, 63, 64, 65, 67, 57, 46, 57, 34, 40, 2, 52, 7, 99, 15, 5, 66, 28, 27, 8, 15, 66, 60};
    unsigned int permutation[] = {0, 321, 51, 261, 221, 381, 361, 151, 311, 61, 251, 451, 21, 411, 271, 101, 401, 241, 131, 441, 181, 191, 481, 91, 281, 421, 0, 291, 431, 211, 1, 351, 461, 171, 201, 471, 31, 71, 111, 81, 341, 11, 161, 121, 301, 41, 391, 231, 331, 491, 371, 141, 0, 322, 52, 432, 262, 222, 2, 352, 152, 172, 32, 312, 252, 112, 82, 272, 342, 102, 162, 302, 402, 242, 132, 232, 192, 492, 92, 422, 0, 292, 212, 382, 362, 462, 202, 472, 62, 72, 452, 22, 412, 12, 122, 42, 392, 442, 182, 332, 482, 372, 282, 142, 0, 323, 53, 263, 383, 353, 203, 473, 313, 113, 23, 343, 163, 403, 393, 133, 183, 193, 333, 93, 283, 0, 293, 433, 213, 223, 3, 363, 463, 153, 173, 33, 63, 73, 253, 453, 83, 413, 273, 13, 103, 123, 303, 43, 243, 443, 233, 493, 483, 373, 143, 423, 0, 324, 54, 434, 264, 4, 364, 354, 174, 474, 34, 74, 254, 114, 84, 414, 344, 104, 124, 404, 244, 394, 134, 234, 334, 484, 374, 144, 424, 0, 294, 214, 224, 384, 464, 154, 204, 314, 64, 454, 24, 274, 14, 164, 304, 44, 444, 184, 194, 494, 94, 284, 0, 325, 55, 215, 225, 5, 355, 465, 175, 35, 315, 75, 255, 415, 15, 165, 305, 245, 445, 185, 235, 495, 485, 375, 145, 0, 295, 435, 265, 385, 365, 155, 205, 475, 65, 115, 455, 85, 25, 275, 345, 105, 125, 405, 45, 395, 135, 195, 335, 95, 285, 425, 0, 326, 56, 216, 226, 366, 356, 156, 206, 36, 66, 256, 116, 26, 276, 106, 126, 306, 46, 136, 196, 336, 96, 286, 146, 0, 296, 436, 266, 386, 6, 466, 176, 476, 316, 76, 456, 86, 416, 346, 16, 166, 406, 246, 396, 446, 186, 236, 496, 486, 376, 426, 0, 327, 57, 267, 7, 367, 157, 37, 77, 457, 87, 417, 277, 107, 127, 47, 137, 447, 187, 497, 487, 97, 287, 427, 0, 297, 437, 217, 227, 387, 357, 467, 177, 207, 477, 317, 67, 257, 117, 27, 347, 17, 167, 307, 407, 247, 397, 237, 197, 337, 377, 147, 0, 328, 58, 218, 388, 468, 158, 208, 38, 78, 258, 88, 418, 278, 348, 168, 408, 398, 448, 188, 498, 488, 98, 428, 0, 298, 438, 268, 228, 8, 368, 358, 178, 478, 318, 68, 118, 458, 28, 18, 108, 128, 308, 48, 248, 138, 238, 198, 338, 378, 288, 148, 0, 329, 59, 219, 389, 9, 359, 469, 179, 479, 319, 259, 459, 29, 349, 169, 309, 49, 249, 399, 449, 239, 339, 489, 99, 429, 0, 299, 439, 269, 229, 369, 159, 209, 39, 69, 79, 119, 89, 419, 279, 19, 109, 129, 409, 139, 189, 199, 499, 379, 289, 149, 0, 330, 60, 220, 230, 360, 470, 180, 480, 320, 260, 120, 90, 30, 350, 110, 410, 250, 140, 190, 240, 340, 500, 290, 0, 300, 440, 270, 390, 10, 370, 160, 210, 40, 70, 80, 460, 420, 280, 20, 170, 130, 310, 50, 400, 450, 200, 490, 100, 380, 150, 430, 0};

    double expectedCMax = 1848;
    double expectedTimes[] = {0,156, 225, 226, 302, 393, 484, 534, 589, 728, 758, 666, 803, 840, 937, 1038, 1089, 1189, 1200, 1297, 1391, 553, 641, 750, 795, 870, 1001, 1078, 1174, 1262, 1319, 328, 405, 513, 602, 631, 728, 816, 900, 971, 1100, 838, 907, 986, 1147, 1215, 1309, 1389, 1411, 1443, 1517, 62, 81, 125, 140, 226, 316, 391, 413, 425, 456, 391, 429, 542, 697, 759, 800, 841, 939, 973, 1111, 417, 517, 579, 621, 703, 827, 911, 917, 1068, 1161, 591, 652, 686, 787, 788, 923, 981, 1081, 1174, 1206, 1132, 1269, 1312, 1436, 1498, 1536, 1608, 1715, 1782, 1789, 741, 786, 859, 1003, 1092, 1156, 1208, 1278, 1363, 1445, 507, 562, 659, 713, 761, 905, 978, 979, 1150, 1184, 722, 872, 913, 1050, 1154, 1192, 1283, 1291, 1408, 1434, 875, 1001, 1149, 1229, 1335, 1355, 1412, 1545, 1549, 1611, 1265, 1293, 1376, 1455, 1617, 1620, 1675, 1774, 1799, 1834, 260, 280, 334, 462, 553, 608, 705, 775, 856, 924, 699, 826, 941, 1030, 1123, 1216, 1256, 1317, 1394, 1429, 226, 368, 454, 463, 592, 636, 686, 793, 906, 985, 968, 1089, 1164, 1269, 1308, 1336, 1533, 1615, 1618, 1628, 1024, 1159, 1221, 1307, 1339, 1374, 1529, 1591, 1700, 1760, 242, 332, 426, 538, 576, 674, 688, 826, 950, 1017, 88, 122, 136, 198, 300, 371, 447, 539, 611, 621, 84, 156, 213, 261, 383, 449, 475, 550, 686, 773, 990, 1081, 1231, 1286, 1349, 1417, 1495, 1568, 1656, 1681, 855, 915, 1079, 1130, 1270, 1271, 1370, 1451, 1454, 1537, 458, 513, 610, 684, 802, 807, 861, 986, 1089, 1150, 77, 102, 191, 283, 338, 397, 483, 525, 590, 626, 649, 684, 763, 872, 909, 1065, 1127, 1140, 1267, 1320, 1215, 1261, 1394, 1467, 1521, 1537, 1662, 1709, 1777, 1848, 42, 91, 102, 146, 147, 152, 202, 229, 324, 332, 751, 853, 984, 1106, 1207, 1218, 1282, 1365, 1414, 1483, 324, 486, 580, 598, 677, 755, 799, 889, 1026, 1146, 3, 21, 56, 63, 94, 104, 108, 133, 171, 179, 999, 1172, 1292, 1332, 1432, 1488, 1588, 1664, 1710, 1719, 626, 768, 844, 911, 990, 1049, 1102, 1221, 1338, 1356, 180, 274, 350, 423, 455, 567, 581, 713, 738, 807, 203, 267, 293, 343, 460, 472, 583, 629, 765, 819, 1168, 1259, 1327, 1448, 1518, 1566, 1623, 1692, 1773, 1831, 131, 183, 249, 347, 389, 408, 553, 639, 651, 721, 916, 958, 1070, 1138, 1239, 1316, 1447, 1464, 1524, 1583, 801, 904, 1039, 1113, 1205, 1241, 1354, 1420, 1505, 1513, 564, 707, 733, 864, 962, 1024, 1034, 1114, 1247, 1276, 1275, 1370, 1468, 1559, 1623, 1635, 1749, 1769, 1800, 1840, 47, 99, 113, 164, 249, 316, 340, 424, 499, 541, 899, 995, 1151, 1170, 1301, 1333, 1438, 1487, 1601, 1634, 510, 587, 656, 760, 772, 886, 957, 1052, 1160, 1228, 219, 289, 313, 419, 550, 580, 621, 664, 821, 828, 256, 419, 464, 481, 634, 709, 795, 882, 969, 1049, 1089, 1239, 1296, 1378, 1458, 1492, 1581, 1632, 1762, 1769, 1098, 1174, 1236, 1373, 1401, 1444, 1541, 1630, 1766, 1826};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test50_20() {
    unsigned int n = 50;
    unsigned int s = 20;
    unsigned int ms = 2;

    double times[] = {0,89, 32, 38, 28, 52, 46, 31, 15, 37, 18, 51, 74, 4, 78, 32, 47, 94, 22, 83, 74, 97, 95, 7, 17, 7, 84, 27, 86, 71, 48, 92, 42, 73, 52, 68, 83, 24, 52, 69, 18, 1, 41, 50, 44, 77, 28, 38, 51, 68, 88, 5, 88, 56, 4, 56, 7, 98, 8, 26, 66, 77, 54, 55, 83, 29, 42, 81, 83, 90, 43, 6, 65, 2, 39, 55, 72, 6, 93, 53, 40, 90, 68, 69, 94, 8, 22, 59, 45, 51, 14, 60, 1, 60, 71, 71, 50, 7, 19, 50, 70, 52, 63, 26, 78, 53, 43, 71, 67, 73, 90, 68, 79, 55, 19, 41, 20, 4, 71, 20, 95, 35, 90, 98, 34, 30, 68, 83, 68, 84, 33, 30, 25, 13, 45, 16, 98, 99, 93, 22, 28, 52, 23, 99, 54, 16, 7, 80, 14, 86, 62, 51, 42, 34, 69, 40, 98, 99, 42, 39, 84, 5, 94, 81, 4, 7, 45, 78, 23, 58, 86, 1, 8, 79, 3, 73, 90, 9, 28, 85, 51, 67, 78, 63, 81, 4, 18, 20, 40, 98, 83, 8, 27, 62, 63, 54, 66, 32, 91, 63, 25, 44, 82, 17, 73, 73, 40, 6, 52, 84, 14, 2, 39, 19, 48, 65, 77, 37, 51, 58, 40, 6, 53, 23, 27, 55, 89, 68, 68, 84, 8, 55, 43, 15, 49, 8, 89, 60, 14, 83, 53, 98, 57, 92, 14, 5, 77, 72, 87, 21, 73, 78, 53, 25, 28, 90, 23, 31, 62, 92, 88, 14, 51, 28, 43, 26, 57, 24, 56, 49, 33, 35, 30, 6, 74, 74, 64, 64, 22, 48, 20, 2, 45, 78, 29, 14, 37, 95, 68, 12, 54, 51, 11, 43, 7, 35, 57, 19, 23, 3, 38, 86, 3, 94, 35, 30, 72, 63, 44, 16, 75, 19, 87, 26, 54, 1, 42, 84, 83, 20, 99, 53, 31, 4, 25, 92, 36, 84, 99, 52, 67, 94, 25, 15, 69, 66, 83, 71, 63, 58, 40, 14, 59, 98, 40, 16, 58, 54, 21, 81, 58, 85, 78, 92, 31, 99, 90, 1, 84, 10, 1, 68, 97, 61, 39, 64, 17, 6, 82, 86, 60, 40, 63, 82, 1, 99, 63, 95, 34, 5, 73, 6, 55, 74, 3, 20, 84, 33, 91, 91, 43, 50, 27, 65, 33, 1, 26, 55, 66, 16, 6, 20, 99, 20, 60, 3, 80, 39, 18, 35, 62, 61, 61, 94, 82, 17, 22, 45, 49, 74, 65, 37, 94, 21, 16, 46, 33, 69, 71, 60, 4, 52, 35, 30, 30, 93, 94, 39, 61, 35, 99, 74, 15, 79, 69, 58, 83, 58, 28, 9, 49, 79, 15, 20, 39, 60, 26, 95, 51, 21, 62, 58, 72, 29, 17, 18, 76, 51, 85, 7, 80, 94, 73, 37, 81, 43, 22, 88, 91, 68, 53, 80, 51, 56, 93, 99, 28, 44, 70, 80, 35, 48, 67, 26, 66, 50, 54, 45, 42, 26, 26, 40, 49, 24, 49, 67, 76, 59, 85, 17, 47, 99, 94, 81, 68, 37, 74, 16, 39, 77, 64, 78, 59, 9, 24, 40, 41, 7, 19, 30, 68, 47, 51, 31, 87, 28, 62, 5, 80, 94, 36, 23, 82, 12, 13, 62, 85, 27, 1, 84, 55, 30, 76, 96, 48, 43, 57, 87, 96, 29, 77, 54, 21, 42, 28, 11, 21, 74, 24, 76, 21, 18, 52, 42, 73, 3, 3, 72, 9, 17, 29, 12, 38, 77, 51, 23, 70, 3, 43, 38, 44, 81, 93, 40, 70, 83, 53, 35, 31, 35, 10, 43, 53, 38, 91, 24, 3, 51, 39, 48, 72, 17, 31, 41, 11, 72, 20, 86, 29, 72, 2, 33, 28, 3, 44, 27, 41, 44, 74, 57, 81, 4, 22, 85, 80, 86, 60, 50, 97, 27, 66, 56, 84, 50, 55, 86, 65, 68, 47, 79, 64, 22, 73, 59, 90, 19, 87, 62, 50, 84, 25, 39, 61, 36, 3, 32, 86, 84, 47, 43, 78, 21, 62, 67, 99, 49, 66, 2, 8, 93, 91, 17, 29, 4, 32, 26, 66, 20, 92, 82, 70, 35, 27, 11, 20, 67, 18, 82, 26, 16, 9, 93, 29, 96, 99, 97, 74, 47, 87, 55, 60, 44, 16, 41, 48, 54, 83, 17, 72, 71, 46, 16, 24, 51, 23, 12, 75, 7, 42, 46, 61, 2, 81, 47, 17, 75, 65, 68, 92, 18, 75, 45, 43, 35, 96, 61, 1, 85, 9, 82, 50, 48, 55, 22, 59, 36, 42, 24, 21, 99, 73, 63, 47, 27, 63, 78, 12, 92, 37, 77, 37, 85, 29, 91, 15, 6, 49, 24, 3, 3, 61, 22, 89, 97, 91, 77, 99, 35, 70, 56, 13, 60, 92, 17, 40, 68, 3, 80, 36, 90, 19, 87, 15, 2, 94, 75, 59, 2, 61, 49, 6, 37, 45, 75, 37, 37, 65, 44, 50, 89, 73, 72, 55, 65, 6, 35, 91, 94, 27, 88, 36, 7, 75, 72, 93, 9, 78, 55, 80, 65, 2, 65, 75, 32, 25, 5, 40, 23, 18, 13, 38, 62, 63, 76, 98, 35, 54, 57, 57, 16, 35, 46, 55, 14, 56, 32, 5, 33, 20, 99, 20, 14, 81, 45, 53, 24, 12, 4, 15, 15, 12, 79, 34, 44, 49, 47, 38, 7, 33, 84, 23, 83, 18, 67, 35, 26, 74, 31, 6, 53, 27, 61, 26, 4, 98, 89, 14, 3, 39, 18, 59, 26, 68, 57, 91, 97, 88, 65, 89, 69, 15, 30, 60, 45, 97, 95, 41, 23, 1, 74, 3, 13, 60, 87, 7, 89, 15, 59, 29, 55, 41, 76, 66, 69, 6, 62, 78, 63, 83, 49, 63, 50, 2, 23, 34, 92, 71, 21, 89, 22, 83, 64, 88, 62, 77, 68, 99, 94, 32, 54, 81, 72, 48, 88, 55, 94, 35, 95, 75, 61, 15, 47, 21, 57, 88, 39, 38, 68, 1, 31, 1, 58, 30, 78, 43, 86, 41, 16, 98, 26, 35};
    unsigned int permutation[] = {};

    double expectedCMax = 2599;
    double expectedTimes[] = {};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test100_5() {
    unsigned int n = 100;
    unsigned int s = 5;
    unsigned int ms = 2;

    double times[] = {0,31, 28, 55, 71, 32, 37, 1, 91, 85, 28, 48, 98, 82, 53, 73, 7, 12, 92, 10, 30, 22, 29, 84, 54, 72, 18, 18, 54, 61, 56, 95, 31, 60, 86, 83, 98, 93, 21, 11, 21, 21, 13, 32, 79, 33, 79, 84, 11, 15, 40, 99, 26, 26, 47, 51, 81, 27, 60, 54, 73, 65, 94, 71, 78, 15, 55, 60, 94, 54, 87, 46, 91, 85, 44, 12, 56, 23, 25, 69, 69, 93, 35, 10, 40, 7, 88, 52, 16, 95, 2, 43, 28, 23, 35, 91, 52, 87, 21, 78, 70, 68, 8, 14, 62, 26, 11, 95, 65, 93, 16, 69, 8, 75, 70, 82, 27, 47, 24, 8, 16, 65, 75, 46, 84, 97, 85, 99, 54, 43, 99, 55, 85, 69, 59, 28, 49, 50, 28, 44, 56, 3, 15, 93, 30, 29, 53, 75, 76, 77, 67, 25, 64, 82, 77, 69, 29, 41, 71, 34, 68, 33, 49, 63, 80, 78, 35, 16, 85, 37, 87, 56, 40, 16, 88, 73, 89, 64, 22, 9, 87, 36, 65, 81, 73, 98, 50, 64, 43, 98, 28, 30, 26, 96, 13, 60, 9, 87, 8, 19, 54, 53, 89, 50, 53, 99, 29, 55, 78, 88, 52, 26, 43, 71, 39, 7, 55, 11, 46, 23, 68, 62, 83, 81, 11, 40, 93, 75, 95, 17, 27, 31, 14, 6, 6, 12, 13, 52, 36, 3, 49, 62, 86, 17, 1, 60, 76, 14, 46, 74, 61, 41, 10, 54, 87, 48, 82, 45, 10, 77, 49, 1, 90, 82, 25, 31, 1, 46, 91, 26, 58, 65, 49, 30, 13, 92, 65, 55, 93, 3, 16, 23, 27, 15, 78, 57, 33, 70, 17, 45, 42, 7, 71, 34, 29, 82, 14, 69, 19, 7, 46, 74, 62, 14, 60, 35, 81, 90, 45, 62, 94, 60, 30, 4, 61, 33, 35, 91, 64, 95, 85, 73, 76, 14, 39, 71, 83, 55, 3, 53, 70, 24, 68, 65, 78, 87, 42, 77, 69, 6, 43, 61, 77, 48, 25, 23, 9, 1, 2, 10, 28, 67, 48, 51, 71, 79, 55, 34, 7, 7, 13, 58, 48, 13, 28, 89, 48, 59, 70, 96, 45, 38, 5, 76, 42, 75, 55, 74, 91, 63, 85, 30, 77, 87, 98, 86, 76, 4, 96, 35, 34, 47, 93, 14, 93, 20, 4, 87, 31, 60, 47, 3, 74, 78, 89, 11, 57, 81, 22, 84, 14, 32, 29, 50, 80, 30, 62, 6, 36, 8, 81, 61, 18, 86, 59, 29, 72, 16, 83, 53, 64, 67, 84, 32, 58, 73, 59, 75, 54, 64, 94, 57, 80, 98, 88, 29, 80, 38, 21, 66, 8, 97, 34, 94, 72, 84, 73, 11, 72, 72, 33, 75, 13, 66, 81, 18, 58, 84, 96, 11, 95, 74, 17, 2, 75, 70, 32, 53, 26, 90, 85, 87, 19, 4, 90, 15, 6, 93, 54, 42, 93, 47, 71, 25, 96, 62, 65, 66, 27, 7, 74};
    unsigned int permutation[] = {0, 346, 416, 251, 286, 241, 6, 261, 76, 461, 446, 21, 111, 436, 126, 306, 376, 31, 66, 201, 466, 491, 366, 351, 96, 171, 56, 131, 321, 71, 391, 326, 421, 156, 406, 301, 276, 336, 86, 341, 216, 311, 211, 141, 81, 116, 231, 0, 41, 281, 26, 291, 91, 371, 471, 166, 396, 361, 136, 191, 401, 496, 486, 476, 331, 181, 381, 451, 456, 316, 121, 11, 441, 146, 246, 61, 151, 431, 226, 161, 106, 206, 426, 186, 221, 176, 256, 51, 271, 386, 36, 1, 266, 411, 46, 481, 196, 101, 296, 236, 16, 356, 0, 347, 417, 292, 287, 472, 7, 167, 262, 362, 137, 402, 22, 477, 112, 332, 437, 452, 307, 457, 377, 122, 442, 147, 247, 467, 62, 352, 432, 227, 57, 207, 427, 132, 187, 72, 392, 422, 157, 272, 302, 37, 2, 267, 47, 482, 212, 102, 142, 82, 297, 357, 232, 0, 42, 282, 27, 92, 252, 372, 242, 77, 397, 462, 192, 447, 497, 487, 182, 382, 127, 317, 32, 12, 67, 202, 492, 367, 152, 97, 172, 162, 107, 322, 222, 177, 327, 257, 52, 407, 387, 277, 337, 87, 412, 342, 217, 312, 197, 237, 17, 117, 0, 348, 418, 293, 288, 243, 168, 78, 398, 363, 463, 448, 403, 488, 113, 183, 453, 308, 318, 123, 33, 443, 148, 248, 493, 63, 153, 433, 228, 108, 428, 323, 188, 73, 328, 258, 53, 158, 273, 388, 38, 88, 3, 413, 343, 483, 313, 213, 143, 18, 0, 43, 283, 28, 93, 253, 373, 473, 8, 263, 138, 193, 498, 23, 478, 333, 438, 383, 128, 458, 378, 13, 68, 203, 468, 368, 353, 98, 173, 163, 58, 208, 133, 223, 178, 393, 423, 408, 303, 278, 338, 268, 48, 218, 198, 103, 83, 298, 238, 118, 358, 233, 0, 349, 419, 284, 294, 254, 244, 474, 169, 264, 399, 464, 404, 489, 114, 184, 384, 129, 459, 379, 124, 14, 69, 204, 249, 64, 154, 434, 99, 164, 109, 134, 189, 329, 259, 54, 409, 279, 39, 339, 89, 414, 314, 214, 104, 299, 239, 19, 359, 0, 44, 29, 94, 289, 374, 9, 79, 364, 139, 194, 449, 499, 24, 479, 334, 439, 454, 309, 319, 34, 444, 149, 469, 494, 369, 354, 229, 174, 59, 209, 429, 324, 224, 74, 179, 394, 424, 159, 274, 304, 389, 4, 269, 344, 49, 219, 484, 199, 144, 84, 119, 234, 0, 350, 420, 30, 95, 290, 245, 475, 265, 80, 365, 450, 405, 500, 490, 115, 185, 385, 130, 460, 380, 35, 15, 150, 250, 470, 370, 355, 100, 165, 110, 210, 135, 325, 75, 180, 260, 55, 410, 275, 340, 270, 345, 220, 215, 200, 145, 300, 20, 235, 0, 45, 285, 295, 255, 375, 10, 170, 400, 465, 140, 195, 25, 480, 335, 440, 455, 310, 320, 125, 445, 70, 205, 495, 65, 155, 435, 230, 175, 60, 430, 190, 225, 395, 330, 425, 160, 305, 390, 280, 40, 90, 5, 415, 50, 485, 315, 105, 85, 240, 120, 360, 0};

    double expectedCMax = 2894;
    double expectedTimes[] = {0,2147, 2330, 2417, 2519, 2574, 244, 245, 389, 474, 502, 914, 1114, 1237, 1355, 1543, 2457, 2644, 2779, 2795, 2882, 478, 566, 706, 760, 843, 62, 89, 143, 206, 262, 922, 1016, 1172, 1307, 1470, 2116, 2302, 2323, 2432, 2540, 21, 34, 66, 145, 178, 2259, 2460, 2487, 2585, 2683, 1877, 2077, 2103, 2334, 2404, 1439, 1635, 1758, 1910, 2083, 1165, 1401, 1488, 1614, 1768, 977, 1174, 1331, 1409, 1592, 1613, 1946, 2031, 2145, 2217, 301, 324, 420, 543, 625, 2457, 2580, 2612, 2787, 2808, 2159, 2346, 2362, 2533, 2542, 112, 140, 166, 241, 353, 1302, 1544, 1619, 1827, 1960, 2423, 2530, 2602, 2775, 2801, 1394, 1728, 1793, 2000, 2054, 547, 627, 782, 852, 986, 2484, 2691, 2728, 2795, 2873, 866, 1054, 1112, 1302, 1476, 691, 894, 992, 1079, 1269, 1494, 1791, 1905, 2059, 2134, 370, 463, 499, 615, 711, 2364, 2545, 2687, 2747, 2806, 1024, 1209, 1346, 1472, 1610, 1190, 1457, 1570, 1691, 1837, 1833, 2098, 2174, 2340, 2434, 1383, 1633, 1698, 1907, 2038, 259, 275, 395, 432, 589, 1358, 1584, 1635, 1856, 2010, 1696, 1951, 2008, 2154, 2304, 566, 718, 863, 936, 1084, 1545, 1855, 1933, 2157, 2185, 400, 450, 595, 628, 771, 2355, 2580, 2588, 2717, 2777, 1030, 1263, 1381, 1462, 1691, 1423, 1690, 1836, 1998, 2106, 2361, 2522, 2594, 2713, 2723, 2275, 2463, 2533, 2608, 2716, 1607, 1887, 1986, 2101, 2225, 1350, 1608, 1703, 1768, 1937, 2515, 2697, 2741, 2801, 2894, 2450, 2632, 2704, 2785, 2857, 207, 293, 310, 316, 455, 1100, 1223, 1392, 1536, 1671, 112, 150, 220, 315, 386, 1778, 2051, 2061, 2287, 2353, 245, 365, 471, 496, 556, 2148, 2376, 2476, 2545, 2625, 1942, 2147, 2204, 2353, 2524, 2029, 2217, 2316, 2421, 2519, 44, 71, 86, 199, 256, 145, 218, 235, 286, 395, 69, 148, 182, 228, 338, 2437, 2649, 2668, 2782, 2852, 1964, 2209, 2223, 2413, 2469, 772, 894, 1002, 1126, 1294, 2335, 2493, 2523, 2674, 2746, 801, 985, 1066, 1221, 1379, 1567, 1804, 1890, 2090, 2205, 1743, 2006, 2034, 2210, 2337, 530, 695, 797, 928, 1022, 2071, 2294, 2385, 2438, 2567, 2220, 2452, 2515, 2570, 2648, 9, 10, 12, 22, 50, 1250, 1449, 1598, 1751, 1890, 2512, 2683, 2735, 2802, 2886, 321, 413, 464, 571, 714, 1183, 1393, 1547, 1680, 1811, 150, 155, 296, 338, 461, 827, 979, 1155, 1218, 1387, 596, 795, 938, 1036, 1170, 2018, 2162, 2300, 2448, 2503, 1660, 2039, 2053, 2247, 2267, 263, 411, 451, 556, 636, 403, 537, 629, 726, 737, 1890, 2158, 2180, 2418, 2432, 2180, 2375, 2467, 2613, 2643, 71, 77, 113, 121, 202, 1804, 2057, 2143, 2306, 2366, 1495, 1706, 1876, 2051, 2147, 1257, 1533, 1602, 1749, 1910, 606, 770, 851, 992, 1116, 971, 1134, 1270, 1395, 1505, 456, 494, 551, 694, 722, 693, 804, 957, 1064, 1200, 766, 905, 1064, 1151, 1302, 376, 424, 530, 637, 655, 1088, 1307, 1477, 1488, 1766, 224, 241, 298, 391, 525, 506, 619, 732, 850, 935, 2346, 2479, 2519, 2698, 2713, 474, 653, 707, 768, 904, 1135, 1334, 1417, 1584, 1753, 468, 560, 622, 701, 811};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}

bool test100_10() {
    unsigned int n = 100;
    unsigned int s = 10;
    unsigned int ms = 2;

    double times[] = {0,73, 11, 23, 7, 83, 40, 62, 55, 90, 41, 39, 37, 51, 56, 35, 31, 52, 62, 32, 76, 77, 29, 47, 89, 37, 40, 23, 17, 53, 42, 45, 94, 54, 3, 51, 37, 64, 23, 60, 47, 7, 18, 90, 93, 6, 61, 71, 5, 68, 94, 96, 59, 24, 30, 18, 2, 54, 26, 59, 93, 62, 62, 44, 56, 91, 52, 70, 40, 66, 51, 56, 65, 63, 33, 94, 97, 48, 36, 81, 34, 78, 38, 61, 54, 24, 23, 31, 36, 3, 37, 60, 72, 16, 42, 4, 92, 18, 55, 90, 65, 85, 40, 16, 94, 75, 71, 24, 45, 21, 32, 5, 93, 41, 41, 22, 94, 46, 78, 77, 85, 97, 68, 60, 4, 93, 77, 66, 99, 97, 33, 93, 62, 98, 40, 93, 63, 25, 58, 42, 99, 2, 82, 32, 10, 69, 7, 84, 50, 94, 99, 79, 56, 42, 25, 83, 37, 30, 87, 88, 85, 71, 94, 49, 24, 4, 89, 76, 17, 42, 34, 22, 52, 36, 82, 83, 13, 10, 37, 81, 14, 28, 82, 41, 33, 32, 26, 63, 18, 59, 16, 91, 40, 39, 20, 62, 70, 46, 41, 73, 55, 26, 20, 29, 37, 70, 39, 81, 68, 13, 24, 75, 58, 41, 92, 11, 47, 86, 89, 97, 83, 32, 3, 58, 27, 78, 17, 48, 36, 92, 69, 19, 92, 30, 1, 59, 43, 29, 95, 33, 98, 60, 63, 55, 74, 73, 38, 43, 6, 55, 57, 29, 73, 22, 83, 90, 5, 86, 58, 36, 42, 97, 30, 11, 38, 79, 79, 90, 21, 89, 24, 30, 61, 54, 77, 93, 88, 9, 95, 64, 83, 78, 41, 37, 48, 20, 46, 76, 78, 51, 19, 33, 60, 62, 72, 35, 61, 97, 78, 37, 65, 89, 19, 40, 55, 1, 94, 88, 7, 87, 74, 90, 33, 67, 25, 78, 74, 63, 83, 17, 77, 99, 96, 29, 72, 24, 72, 54, 54, 11, 1, 89, 56, 31, 12, 87, 15, 10, 25, 72, 73, 54, 96, 37, 65, 76, 12, 47, 99, 93, 68, 54, 9, 44, 25, 85, 23, 95, 23, 52, 17, 42, 67, 27, 1, 18, 70, 25, 84, 98, 75, 38, 88, 4, 31, 40, 4, 23, 17, 91, 91, 84, 76, 19, 58, 73, 96, 27, 73, 30, 85, 41, 19, 21, 3, 88, 79, 92, 51, 52, 90, 61, 34, 41, 84, 25, 97, 76, 38, 69, 79, 32, 64, 41, 42, 57, 68, 59, 12, 39, 80, 11, 48, 68, 23, 46, 17, 22, 56, 59, 23, 58, 77, 84, 3, 16, 40, 60, 39, 43, 95, 84, 18, 56, 60, 67, 16, 88, 8, 84, 82, 31, 30, 52, 24, 33, 20, 93, 8, 26, 33, 48, 2, 66, 89, 75, 2, 92, 86, 62, 57, 94, 53, 19, 47, 61, 2, 16, 47, 45, 93, 32, 42, 66, 30, 57, 27, 77, 24, 89, 38, 68, 82, 97, 35, 39, 12, 31, 88, 88, 99, 87, 11, 77, 94, 6, 28, 44, 47, 47, 93, 95, 6, 93, 3, 53, 72, 45, 6, 85, 47, 72, 19, 34, 64, 28, 30, 28, 91, 57, 17, 42, 3, 12, 34, 52, 14, 6, 85, 49, 84, 49, 96, 95, 90, 31, 19, 63, 62, 83, 4, 53, 47, 52, 70, 71, 43, 12, 84, 40, 76, 85, 61, 27, 9, 29, 62, 69, 61, 50, 59, 26, 93, 93, 72, 13, 76, 53, 65, 20, 59, 51, 76, 95, 90, 33, 15, 15, 93, 85, 10, 81, 35, 74, 32, 58, 25, 46, 26, 2, 82, 7, 60, 56, 71, 88, 50, 19, 17, 79, 99, 43, 76, 92, 53, 7, 19, 26, 98, 10, 47, 79, 70, 87, 66, 62, 43, 52, 72, 98, 22, 27, 6, 48, 22, 85, 35, 2, 42, 51, 10, 66, 95, 32, 11, 32, 67, 18, 33, 96, 26, 27, 42, 69, 77, 30, 78, 4, 80, 35, 52, 92, 61, 6, 32, 6, 74, 64, 18, 32, 83, 29, 40, 18, 60, 87, 80, 62, 34, 18, 62, 87, 27, 94, 3, 99, 88, 36, 31, 66, 84, 57, 70, 46, 21, 96, 71, 59, 72, 9, 42, 67, 69, 40, 83, 86, 70, 62, 26, 51, 87, 95, 74, 32, 49, 85, 1, 81, 67, 62, 28, 10, 44, 60, 26, 24, 23, 96, 70, 34, 8, 84, 13, 84, 75, 94, 41, 9, 14, 4, 60, 25, 26, 24, 50, 56, 44, 26, 72, 65, 47, 96, 71, 37, 61, 64, 34, 46, 25, 38, 46, 27, 94, 51, 20, 13, 34, 98, 80, 28, 85, 35, 56, 9, 80, 85, 85, 95, 71, 37, 90, 59, 15, 43, 15, 41, 66, 84, 92, 50, 54, 1, 7, 89, 32, 74, 76, 35, 74, 30, 78, 55, 5, 66, 88, 56, 50, 86, 58, 32, 32, 30, 86, 94, 36, 37, 86, 81, 27, 67, 83, 78, 66, 8, 15, 90, 11, 52, 96, 13, 59, 29, 19, 4, 90, 71, 8, 75, 49, 87, 48, 76, 30, 58, 79, 84, 67, 51, 33, 6, 5, 39, 54, 59, 41, 19, 19, 52, 74, 93, 61, 10, 15, 16, 12, 94, 98, 51, 11, 78, 25, 89, 83, 44, 41, 23, 82, 98, 4, 31, 80, 77, 74, 29, 97, 61, 66, 65, 58, 16, 76, 49, 66, 99, 94, 52, 41, 20, 19, 63, 4, 56, 8, 8, 5, 26, 2, 87, 11, 37, 18, 52, 46, 1, 15, 5, 45, 19, 83, 60, 28, 43, 85, 76, 77, 70, 8, 20, 90, 91, 82, 37, 69, 66, 4, 28, 88, 41, 44, 56, 74, 22, 2, 14, 97, 11, 99, 9, 95, 5, 21, 85, 97, 2, 46, 43, 75, 21, 27, 78, 11, 61, 8, 59, 85, 59, 8, 12, 93, 85, 32, 49, 8, 93, 5, 78, 22, 64, 35, 9, 45, 82, 10, 60, 38, 85, 31, 63, 71, 5, 11, 49, 44, 11, 83, 53, 28, 94, 96, 20, 77};
    unsigned int permutation[] = {0, 391, 601, 531, 961, 471, 111, 761, 481, 271, 491, 401, 711, 681, 201, 771, 131, 881, 151, 991, 311, 551, 1, 291, 261, 571, 191, 801, 161, 91, 41, 361, 631, 321, 791, 741, 281, 891, 611, 411, 11, 821, 31, 181, 331, 951, 841, 591, 911, 21, 901, 171, 0, 861, 971, 431, 231, 141, 831, 461, 501, 671, 701, 341, 381, 211, 811, 121, 921, 781, 441, 621, 301, 61, 421, 851, 581, 871, 71, 541, 691, 251, 241, 751, 561, 511, 931, 101, 351, 651, 641, 731, 941, 451, 661, 51, 521, 221, 371, 721, 981, 81, 0, 392, 602, 962, 232, 832, 472, 762, 672, 702, 342, 382, 212, 122, 772, 922, 442, 152, 992, 312, 552, 2, 852, 292, 262, 72, 192, 542, 162, 752, 42, 362, 632, 322, 932, 892, 352, 412, 642, 32, 332, 952, 842, 592, 912, 722, 82, 0, 862, 972, 532, 432, 142, 462, 502, 112, 482, 272, 492, 402, 712, 682, 812, 202, 132, 782, 882, 622, 302, 62, 422, 582, 872, 572, 692, 802, 252, 242, 92, 562, 512, 792, 742, 282, 102, 612, 652, 12, 822, 732, 182, 942, 452, 662, 52, 522, 222, 372, 982, 22, 902, 172, 0, 393, 603, 963, 233, 833, 473, 503, 763, 673, 273, 493, 383, 213, 813, 773, 133, 783, 443, 623, 63, 3, 853, 583, 263, 73, 193, 543, 253, 163, 753, 43, 633, 513, 743, 283, 103, 893, 353, 653, 823, 733, 943, 453, 953, 843, 223, 373, 983, 23, 903, 173, 0, 863, 973, 533, 433, 143, 463, 113, 483, 703, 343, 403, 713, 683, 123, 203, 923, 883, 153, 993, 303, 313, 553, 423, 293, 873, 573, 693, 803, 243, 93, 363, 563, 323, 793, 933, 613, 413, 13, 643, 33, 183, 333, 663, 53, 523, 593, 913, 723, 83, 0, 394, 604, 964, 474, 464, 114, 484, 274, 494, 404, 214, 124, 204, 134, 784, 884, 154, 994, 314, 64, 4, 424, 854, 294, 874, 74, 194, 544, 254, 754, 44, 514, 794, 284, 894, 414, 14, 824, 34, 184, 944, 54, 524, 594, 914, 724, 84, 0, 864, 974, 534, 434, 234, 144, 834, 504, 764, 674, 704, 344, 384, 714, 684, 814, 774, 924, 444, 624, 304, 554, 584, 264, 574, 694, 804, 164, 244, 94, 364, 564, 634, 324, 744, 934, 104, 614, 354, 654, 644, 734, 454, 334, 664, 954, 844, 224, 374, 984, 24, 904, 174, 0, 395, 605, 235, 835, 465, 485, 275, 495, 405, 385, 215, 685, 205, 135, 785, 885, 155, 305, 315, 555, 425, 855, 585, 875, 75, 545, 805, 165, 245, 95, 45, 565, 325, 515, 745, 285, 105, 615, 355, 655, 645, 735, 185, 335, 525, 595, 375, 915, 725, 985, 905, 0, 865, 975, 535, 435, 965, 145, 475, 505, 115, 765, 675, 705, 345, 715, 815, 125, 775, 925, 445, 625, 995, 65, 5, 295, 265, 575, 195, 695, 255, 755, 365, 635, 795, 935, 895, 415, 15, 825, 35, 945, 455, 665, 955, 55, 845, 225, 25, 85, 175, 0, 396, 606, 236, 836, 466, 766, 486, 676, 706, 406, 716, 216, 686, 206, 776, 786, 446, 156, 306, 66, 6, 296, 266, 576, 546, 696, 256, 246, 756, 46, 366, 326, 796, 936, 896, 356, 656, 646, 186, 946, 956, 526, 226, 376, 916, 26, 86, 0, 866, 976, 536, 436, 966, 146, 476, 506, 116, 276, 496, 346, 386, 816, 126, 136, 926, 886, 626, 996, 316, 556, 426, 856, 586, 876, 76, 196, 806, 166, 96, 566, 636, 516, 746, 286, 106, 616, 416, 16, 826, 736, 36, 456, 336, 666, 56, 846, 596, 726, 986, 906, 176, 0, 397, 607, 967, 237, 837, 467, 767, 677, 707, 407, 717, 687, 127, 777, 887, 157, 627, 997, 67, 7, 587, 877, 77, 577, 547, 807, 167, 97, 47, 637, 327, 797, 937, 897, 357, 657, 17, 827, 187, 457, 957, 847, 597, 377, 727, 87, 177, 0, 867, 977, 537, 437, 147, 477, 507, 117, 487, 277, 497, 347, 387, 217, 817, 207, 137, 927, 787, 447, 307, 317, 557, 427, 857, 297, 267, 197, 697, 257, 247, 757, 367, 567, 517, 747, 287, 107, 617, 417, 647, 737, 37, 947, 337, 667, 57, 527, 227, 917, 987, 27, 907, 0, 398, 608, 438, 968, 148, 478, 508, 118, 488, 678, 708, 498, 408, 718, 688, 818, 208, 138, 928, 888, 628, 308, 318, 558, 858, 298, 578, 548, 808, 168, 98, 368, 638, 518, 798, 288, 898, 618, 18, 828, 458, 338, 668, 58, 528, 918, 988, 908, 178, 0, 868, 978, 538, 238, 838, 468, 768, 278, 348, 388, 218, 128, 778, 788, 448, 158, 998, 68, 8, 428, 588, 878, 268, 78, 198, 698, 258, 248, 758, 48, 568, 328, 748, 938, 108, 358, 418, 658, 648, 738, 38, 188, 948, 958, 848, 598, 228, 378, 728, 28, 88, 0, 399, 539, 969, 839, 469, 769, 489, 709, 349, 389, 719, 689, 819, 209, 779, 929, 159, 999, 309, 559, 429, 859, 299, 269, 579, 549, 259, 249, 99, 569, 639, 799, 749, 939, 619, 359, 659, 649, 189, 339, 59, 599, 229, 919, 989, 29, 0, 869, 979, 609, 439, 239, 149, 479, 509, 119, 679, 279, 499, 409, 219, 129, 139, 789, 889, 449, 629, 319, 69, 9, 589, 879, 79, 199, 699, 809, 169, 759, 49, 369, 329, 519, 289, 109, 899, 419, 19, 829, 739, 39, 949, 459, 669, 959, 849, 529, 379, 729, 89, 909, 179, 0, 400, 540, 970, 240, 840, 470, 510, 770, 280, 500, 390, 220, 820, 140, 790, 890, 160, 310, 70, 10, 430, 860, 880, 80, 200, 810, 170, 760, 100, 370, 800, 290, 940, 360, 420, 650, 830, 40, 460, 670, 850, 530, 600, 380, 90, 180, 0, 870, 980, 610, 440, 150, 480, 120, 490, 680, 710, 350, 410, 720, 690, 130, 210, 780, 930, 450, 630, 1000, 320, 560, 590, 300, 270, 580, 550, 700, 260, 250, 50, 570, 640, 330, 520, 750, 110, 900, 620, 660, 20, 740, 190, 950, 340, 960, 60, 230, 920, 730, 990, 30, 910, 0};

    double expectedCMax = 3355;
    double expectedTimes[] = {};

    return cMaxTest(n, s, ms, times, permutation, expectedCMax, expectedTimes);
}
